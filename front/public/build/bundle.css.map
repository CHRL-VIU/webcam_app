{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\Geocoder.svelte",
    "..\\..\\Map.svelte",
    "..\\..\\Image.svelte",
    "..\\..\\Images.svelte"
  ],
  "sourcesContent": [
    "<div bind:this={container} id={fieldId} />\n\n<script>\n  import { onMount, createEventDispatcher } from 'svelte'\n  import loader from '@beyonk/async-script-loader'\n\n  const dispatch = createEventDispatcher()\n\n  const fieldId = 'bsm-' + Math.random().toString(36).substring(6)\n\n  export let accessToken\n  export let options = {}\n  export let version = 'v4.5.1'\n  export let types = [ 'country', 'region', 'postcode', 'district', 'place', 'locality', 'neighborhood', 'address' ]\n  export let placeholder = 'Search'\n  export let value = null\n\n  export let geocoder = null\n\n  let container\n  let ready = false\n\n  const onResult = p => dispatch('result', p)\n  const onResults = p => dispatch('results', p)\n  const onError = p => dispatch('error', p)\n  const onLoading = p => dispatch('loading', p)\n  const onClear = p => dispatch('clear', p)\n\n  onMount(() => {\n    loader([\n      { type: 'script', url: `//api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/${version}/mapbox-gl-geocoder.min.js` },\n      { type: 'style', url: `//api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/${version}/mapbox-gl-geocoder.css` }\n    ],\n    () => !!window.MapboxGeocoder,\n    onAvailable\n    )\n\n    return () => {\n      geocoder\n        .off('results', onResults)\n        .off('result', onResult)\n        .off('loading', onLoading)\n        .off('error', onError)\n        .off('clear', onClear)\n    }\n  })\n\n  function onAvailable () {\n    const optionsWithDefaults = Object.assign({\n      accessToken,\n      types: types.join(','),\n      placeholder\n    }, options)\n    geocoder = new window.MapboxGeocoder(optionsWithDefaults)\n    geocoder.addTo(`#${fieldId}`)\n  \n    geocoder\n      .on('results', onResults)\n      .on('result', onResult)\n      .on('loading', onLoading)\n      .on('error', onError)\n      .on('clear', onClear)\n\n    geocoder.setInput(value)\n\n    ready = true\n    dispatch('ready')\n  }\n\n  $: ready && value && geocoder.setInput(value)\n</script>\n\n<style>\n  div {\n    padding: 0;\n  }\n</style>",
    "<div bind:this={container}>\n  {#if map}\n  <slot></slot>\n  {/if}\n</div>\n\n<style>\n  div {\n    width: 100%;\n    height: 100%;\n  }\n</style>\n\n<script>\n  import loader from '@beyonk/async-script-loader'\n  import { onMount, createEventDispatcher, setContext } from 'svelte'\n  import { contextKey } from './mapbox.js'\n  import { EventQueue } from './queue.js'\n\n  setContext(contextKey, {\n    getMap: () => map,\n    getMapbox: () => mapbox\n  })\n\n  const dispatch = createEventDispatcher()\n\n  export let map = null\n  export let version = 'v1.11.0'\n\n  let container\n  let mapbox\n  let queue\n\n  export let options = {}\n  export let accessToken\n  export let style = 'mapbox://styles/mapbox/streets-v11'\n\n  export function setCenter (center, zoom) {\n    queue.send('setCenter', [ center ])\n    if (zoom && Number.isInteger(zoom)) {\n      queue.send('setZoom', [ zoom ])\n    }\n  }\n  export function fitBounds (bbox) {\n    queue.send('fitBounds', [ bbox ])\n  }\n\n  export function flyTo (destination) {\n    queue.send('flyTo', [ destination ])\n  }\n\n  export function resize () {\n    queue.send('resize')\n  }\n\n  export function getMap () {\n    return map\n  }\n\n  export function getMapbox () {\n    return mapbox\n  }\n\n  function onAvailable () {\n    window.mapboxgl.accessToken = accessToken\n    mapbox = window.mapboxgl\n    const optionsWithDefaults = Object.assign({\n      container,\n      style\n    }, options)\n\n    const el = new mapbox.Map(optionsWithDefaults)\n\n    el.on('dragend', () => dispatch('recentre', { center: el.getCenter() }))\n\n    el.on('load', () => {\n      map = el\n      queue.start()\n      dispatch('ready')\n    })\n  }\n\nfunction worker (cmd, cb) {\n    const [ command, params ] = cmd\n    map[command].apply(map, params)\n    cb(null)\n  }\n\n  onMount(async () => {\n    queue = new EventQueue(worker)\n\n    loader([\n      { type: 'script', url: `//api.mapbox.com/mapbox-gl-js/${version}/mapbox-gl.js` },\n      { type: 'style', url: `//api.mapbox.com/mapbox-gl-js/${version}/mapbox-gl.css` }\n    ],\n    () => !!window.mapboxgl,\n    onAvailable\n    )\n\n    return () => {\n      queue.stop()\n      map.remove()\n    }\n  })\n</script>\n",
    "<script>\r\nexport let image = {}\r\nconst imgPath = 'http://www.viu-hydromet-wx.ca/webcam_images/'\r\n\r\n</script>\r\n\r\n  <img src=\"{imgPath}{image}\" alt=\"slideshow\"/>\r\n\r\n\r\n<style>\r\n    img {\r\n                max-width: 100%;\r\n                max-height: inherit;\r\n    }\r\n</style>\r\n",
    "<script>\r\n  import { images, numImages, slide_id } from \"./data-images.js\";\r\n  import { onMount } from \"svelte\";\r\n  import Image from \"./Image.svelte\";\r\n  import { Map, Marker } from \"@beyonk/svelte-mapbox\";\r\n  import { accessToken, listItems } from \"./consts\";\r\n\r\n  let mapComponent;\r\n  let currentCam = \"Plummer Hut\";\r\n  let curDate =\"\";\r\n  let curTime =\"\";\r\n  let curDateTime =\"\";\r\n  let curElevation=\"\";\r\n  let curCoords=\"\";\r\n  // let reactDateTime = [$images[$slide_id].slice(-18, -14), $images[$slide_id].slice(-14, -12), $images[$slide_id].slice(-12, -10)].join(\"-\");\r\n\r\n  function onReady() {\r\n    mapComponent.setCenter([-125.2,50.4], 7);\r\n  }\r\n\r\n  // functions for next and previous buttons\r\n  function prevImage() {\r\n    if ($slide_id > 0) {\r\n      $slide_id--;\r\n    }\r\n  }\r\n  function nextImage() {\r\n    if ($slide_id < $numImages) {\r\n      $slide_id++;\r\n    }\r\n  }\r\n\r\n  // initiate reactive functions for each station\r\n  onMount(async () => {\r\n    const url =\r\n      \"http://www.viu-hydromet-wx.ca/webcam_images/get-images-variable.php?stnName=plummer\";\r\n    let res = await fetch(url);\r\n    res = await res.json();\r\n    $images = res;\r\n    $numImages = res.length - 1;\r\n    $slide_id = $numImages;\r\n    currentCam = \"Plummer Hut\";\r\n    curDate = [$images[$slide_id].slice(-18, -14), $images[$slide_id].slice(-14, -12), $images[$slide_id].slice(-12, -10)].join(\"-\");\r\n    curTime = [$images[$slide_id].slice(-10, -8), $images[$slide_id].slice(-8, -6), $images[$slide_id].slice(-6, -4),].join(\":\");\r\n    curDateTime = [curDate, curTime, \"UTC\"].join(\" \");\r\n    curElevation = [listItems[0].elevation, \" m\"].join(\"\");\r\n    curCoords = listItems[0].coords;\r\n  });\r\n\r\n  async function plum() {\r\n    const url =\r\n      \"http://www.viu-hydromet-wx.ca/webcam_images/get-images-variable.php?stnName=plummer\";\r\n    let res = await fetch(url);\r\n    res = await res.json();\r\n    $images = res;\r\n    $numImages = res.length - 1;\r\n    $slide_id = $numImages;\r\n    mapComponent.setCenter(listItems[0].coords, 10);\r\n    currentCam = \"Plummer Hut\";\r\n    curDate = [$images[$slide_id].slice(-18, -14), $images[$slide_id].slice(-14, -12), $images[$slide_id].slice(-12, -10)].join(\"-\");\r\n    curTime = [$images[$slide_id].slice(-10, -8), $images[$slide_id].slice(-8, -6), $images[$slide_id].slice(-6, -4)].join(\":\");\r\n    curDateTime = [curDate, curTime, \"UTC\"].join(\" \");\r\n    curElevation = [listItems[0].elevation, \" m\"].join(\"\");\r\n    curCoords = listItems[0].coords;\r\n  }\r\n  async function klina() {\r\n    const url =\r\n      \"http://www.viu-hydromet-wx.ca/webcam_images/get-images-variable.php?stnName=klinaklini\";\r\n    let res = await fetch(url);\r\n    res = await res.json();\r\n    $images = res;\r\n    $numImages = res.length - 1;\r\n    $slide_id = $numImages;\r\n    mapComponent.setCenter(listItems[1].coords, 10);\r\n    currentCam = \"Klinaklini\";\r\n    curDate = [$images[$slide_id].slice(-18, -14), $images[$slide_id].slice(-14, -12), $images[$slide_id].slice(-12, -10)].join(\"-\");\r\n    curTime = [$images[$slide_id].slice(-10, -8), $images[$slide_id].slice(-8, -6), $images[$slide_id].slice(-6, -4)].join(\":\");\r\n    curDateTime = [curDate, curTime, \"UTC\"].join(\" \");\r\n    curElevation = [listItems[1].elevation, \" m\"].join(\"\");\r\n    curCoords = listItems[1].coords\r\n  }\r\n  async function homath() {\r\n    const url =\r\n      \"http://www.viu-hydromet-wx.ca/webcam_images/get-images-variable.php?stnName=homathko\";\r\n    let res = await fetch(url);\r\n    res = await res.json();\r\n    $images = res;\r\n    $numImages = res.length - 1;\r\n    $slide_id = $numImages;\r\n    mapComponent.setCenter(listItems[2].coords, 10);\r\n    currentCam = \"Homathko\";\r\n    curDate = [$images[$slide_id].slice(-18, -14), $images[$slide_id].slice(-14, -12), $images[$slide_id].slice(-12, -10)].join(\"-\");\r\n    curTime = [$images[$slide_id].slice(-10, -8), $images[$slide_id].slice(-8, -6), $images[$slide_id].slice(-6, -4)].join(\":\");\r\n    curDateTime = [curDate, curTime, \"UTC\"].join(\" \");\r\n    curElevation = [listItems[2].elevation, \" m\"].join(\"\");\r\n    curCoords = listItems[2].coords\r\n  }\r\n  async function perse() {\r\n    const url =\r\n      \"http://www.viu-hydromet-wx.ca/webcam_images/get-images-variable.php?stnName=perseverance\";\r\n    let res = await fetch(url);\r\n    res = await res.json();\r\n    $images = res;\r\n    $numImages = res.length - 1;\r\n    $slide_id = $numImages;\r\n    mapComponent.setCenter(listItems[3].coords, 10);\r\n    currentCam = \"Perseverance\";\r\n    curDate = [$images[$slide_id].slice(-18, -14), $images[$slide_id].slice(-14, -12), $images[$slide_id].slice(-12, -10)].join(\"-\");\r\n    curTime = [$images[$slide_id].slice(-10, -8), $images[$slide_id].slice(-8, -6), $images[$slide_id].slice(-6, -4)].join(\":\");\r\n    curDateTime = [curDate, curTime, \"UTC\"].join(\" \");\r\n    curElevation = [listItems[3].elevation, \" m\"].join(\"\");\r\n    curCoords = listItems[3].coords\r\n  }\r\n\r\n  async function cruick() {\r\n    const url =\r\n      \"http://www.viu-hydromet-wx.ca/webcam_images/get-images-variable.php?stnName=cruickshank\";\r\n    let res = await fetch(url);\r\n    res = await res.json();\r\n    $images = res;\r\n    $numImages = res.length - 1;\r\n    $slide_id = $numImages;\r\n    mapComponent.setCenter(listItems[4].coords, 10);\r\n    currentCam = \"Upper Cruickshank\";\r\n    curDate = [$images[$slide_id].slice(-18, -14), $images[$slide_id].slice(-14, -12), $images[$slide_id].slice(-12, -10)].join(\"-\");\r\n    curTime = [$images[$slide_id].slice(-10, -8), $images[$slide_id].slice(-8, -6), $images[$slide_id].slice(-6, -4)].join(\":\");\r\n    curDateTime = [curDate, curTime, \"UTC\"].join(\" \");\r\n    curElevation = [listItems[4].elevation, \" m\"].join(\"\");\r\n    curCoords = listItems[4].coords\r\n  }\r\n</script>\r\n\r\n<style>\r\n .wrapper { \r\n  /* border : 2px solid #000;  */\r\n  overflow:hidden;\r\n  display: block;\r\n\r\n}\r\n\r\n.wrapper div {\r\n   min-height: 200px;\r\n   padding: 10px;\r\n   /* max-height: 500px; */\r\n   height:100vh;\r\n   /* background-color: green; */\r\n}\r\n#one {\r\n  /* background-color: gray; */\r\n  float:left; \r\n  /* margin-right:20px; */\r\n  /* border-right:2px solid #000; */\r\n  position: relative;\r\n  padding-bottom: 0%;\r\n  width:60%;\r\n  }\r\n#two { \r\n  /* background-color: white; */\r\n  /* padding-top: 100px; */\r\n  overflow:hidden;\r\n  margin:10px;\r\n  /* border:2px dashed #ccc; */\r\n  min-height:170px;\r\n  padding-top: 100px;\r\n  height:70vh;\r\n  \r\n}\r\n\r\n@media screen and (max-width: 800px) {\r\n   #one { \r\n    /* background-color: gray; */\r\n    overflow: hidden;\r\n    float: none;\r\n    width:auto;\r\n    /* border-bottom:2px solid #000;   */\r\n    position: relative;\r\n    padding-bottom:11em;\r\n    max-height: 100%;\r\n  }\r\n  #two { \r\n  /* background-color: white; */\r\n  /* padding-top: 100px; */\r\n  overflow:hidden;\r\n  /* border:2px dashed #ccc; */\r\n  min-height:170px;\r\n  height:40vh;\r\n  padding-top:0em;\r\n\r\n}\r\n\r\n  .wrapper div {\r\n   /* min-height: 200px; */\r\n   padding: 0px;\r\n   /* max-height: 500px; */\r\n   height:60vh;\r\n   /* background-color: green; */\r\n}\r\n}\r\n@media screen and (max-width: 500px) {\r\n   #one { \r\n    /* background-color: gray; */\r\n    float: none;\r\n    width:auto;\r\n    /* border-bottom:2px solid #000;   */\r\n    position: relative;\r\n    padding-bottom:1em;\r\n    max-height: 100%;\r\n  }\r\n  #two { \r\n  /* background-color: white; */\r\n  /* padding-top: 100px; */\r\n  overflow:hidden;\r\n  /* border:2px dashed #ccc; */\r\n  min-height:170px;\r\n  height:40vh;\r\n    padding-top:0em;\r\n\r\n}\r\n\r\n  .wrapper div {\r\n   /* min-height: 200px; */\r\n   padding: 0px;\r\n   /* max-height: 500px; */\r\n   height:60vh;\r\n   /* background-color: green; */\r\n}\r\n}\r\n  .slideshow {\r\n    margin: auto;\r\n    height: 100%;\r\n    max-width: 100%;\r\n    /* min-width: 100%; */\r\n    max-height: 70vh;\r\n  }\r\n\r\n  .filename {\r\n    display: block;\r\n    word-wrap: break-word;\r\n    font-size: 2vh;\r\n  }\r\n\r\n  .rangecontainer {\r\n    display: block;\r\n    max-width: 100%; /* Width of the outside container */\r\n  }\r\n\r\n  .slider {\r\n    max-width: 743px;\r\n    width: 100%; /* Full-width */\r\n    height: 25px; /* Specified height */\r\n    background: #d3d3d3; /* Grey background */\r\n    opacity: 0.7; /* Set transparency (for mouse-over effects on hover) */\r\n    -webkit-transition: 0.2s; /* 0.2 seconds transition on hover */\r\n    transition: opacity 0.2s;\r\n  }\r\n\r\n  /* Mouse-over effects */\r\n  .slider:hover {\r\n    opacity: 1; /* Fully shown on mouse-over */\r\n  }\r\n</style>\r\n\r\n<!--Define Header-->\r\n<div class=\"header\">\r\n  <a href=\"http://www.viu-hydromet-wx.ca/\" class=\"logo\">\r\n    <img\r\n      src=\"images/chrl-logo-text.png\"\r\n      alt=\"CHRL logo\"\r\n      style=\"width:250px;height:75x;\" />\r\n  </a>\r\n</div>\r\n\r\n<div>\r\n  <button on:click={plum}> Plummer </button>\r\n\r\n  <button on:click={klina}> Klinaklini </button>\r\n\r\n  <button on:click={homath}> Homathko </button>\r\n\r\n  <button on:click={perse}> Perseverance </button>\r\n\r\n  <button on:click={cruick}> Cruickshank </button>\r\n</div>\r\n\r\n<!--Create range slider container with images from user selected station-->\r\n\r\n<div class=\"wrapper\">\r\n  <div id=\"one\">\r\n      <div class=\"mainimage\">\r\n      <div class=\"body\" style=\"text-align: center\">\r\n        <figure class=\"slideshow\">\r\n          <p class =\"filename\">\r\n            Station: {currentCam}<br />\r\n            Coordinates: {curCoords}<br />\r\n            Elevation: {curElevation}<br />\r\n            Filename: {$images[$slide_id]}\r\n          </p>\r\n          <Image image={$images[$slide_id]} />\r\n          <div class=\"rangecontainer\">\r\n            <input\r\n              bind:value={$slide_id}\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max={$numImages}\r\n              step=\"1\"\r\n              class=\"slider\" />\r\n            <br />\r\n            <button on:click={prevImage}> Previous </button>\r\n            <button on:click={nextImage}> Next </button>\r\n          </div>\r\n        </figure>\r\n      </div>\r\n    </div>\r\n</div>\r\n  <div id=\"two\">\r\n      <Map\r\n        {accessToken}\r\n        style=\"mapbox://styles/mapbox/outdoors-v11\"\r\n        bind:this={mapComponent}\r\n        on:ready={onReady}>\r\n        <Marker\r\n          lat={listItems[0].lat}\r\n          lng={listItems[0].lon}\r\n          label={listItems[0].name} />\r\n        <Marker\r\n          lat={listItems[1].lat}\r\n          lng={listItems[1].lon}\r\n          label={listItems[1].name} />\r\n        <Marker\r\n          lat={listItems[2].lat}\r\n          lng={listItems[2].lon}\r\n          label={listItems[2].name} />\r\n        <Marker\r\n          lat={listItems[3].lat}\r\n          lng={listItems[3].lon}\r\n          label={listItems[3].name} />\r\n        <Marker\r\n          lat={listItems[4].lat}\r\n          lng={listItems[4].lon}\r\n          label={listItems[4].name} />\r\n      </Map>\r\n  </div>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "AAyEE,GAAG,eAAC,CAAC,AACH,OAAO,CAAE,CAAC,AACZ,CAAC;ACpED,GAAG,eAAC,CAAC,AACH,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC;ACAC,GAAG,eAAC,CAAC,AACO,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,OAAO,AAC/B,CAAC;ACwHJ,QAAQ,4BAAC,CAAC,AAET,SAAS,MAAM,CACf,OAAO,CAAE,KAAK,AAEhB,CAAC,AAED,sBAAQ,CAAC,GAAG,cAAC,CAAC,AACX,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,IAAI,CAEb,OAAO,KAAK,AAEf,CAAC,AACD,IAAI,4BAAC,CAAC,AAEJ,MAAM,IAAI,CAGV,QAAQ,CAAE,QAAQ,CAClB,cAAc,CAAE,EAAE,CAClB,MAAM,GAAG,AACT,CAAC,AACH,IAAI,4BAAC,CAAC,AAGJ,SAAS,MAAM,CACf,OAAO,IAAI,CAEX,WAAW,KAAK,CAChB,WAAW,CAAE,KAAK,CAClB,OAAO,IAAI,AAEb,CAAC,AAED,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACnC,IAAI,4BAAC,CAAC,AAEL,QAAQ,CAAE,MAAM,CAChB,KAAK,CAAE,IAAI,CACX,MAAM,IAAI,CAEV,QAAQ,CAAE,QAAQ,CAClB,eAAe,IAAI,CACnB,UAAU,CAAE,IAAI,AAClB,CAAC,AACD,IAAI,4BAAC,CAAC,AAGN,SAAS,MAAM,CAEf,WAAW,KAAK,CAChB,OAAO,IAAI,CACX,YAAY,GAAG,AAEjB,CAAC,AAEC,sBAAQ,CAAC,GAAG,cAAC,CAAC,AAEb,OAAO,CAAE,GAAG,CAEZ,OAAO,IAAI,AAEd,CAAC,AACD,CAAC,AACD,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACnC,IAAI,4BAAC,CAAC,AAEL,KAAK,CAAE,IAAI,CACX,MAAM,IAAI,CAEV,QAAQ,CAAE,QAAQ,CAClB,eAAe,GAAG,CAClB,UAAU,CAAE,IAAI,AAClB,CAAC,AACD,IAAI,4BAAC,CAAC,AAGN,SAAS,MAAM,CAEf,WAAW,KAAK,CAChB,OAAO,IAAI,CACT,YAAY,GAAG,AAEnB,CAAC,AAEC,sBAAQ,CAAC,GAAG,cAAC,CAAC,AAEb,OAAO,CAAE,GAAG,CAEZ,OAAO,IAAI,AAEd,CAAC,AACD,CAAC,AACC,UAAU,4BAAC,CAAC,AACV,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,IAAI,CAEf,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,SAAS,4BAAC,CAAC,AACT,OAAO,CAAE,KAAK,CACd,SAAS,CAAE,UAAU,CACrB,SAAS,CAAE,GAAG,AAChB,CAAC,AAED,eAAe,4BAAC,CAAC,AACf,OAAO,CAAE,KAAK,CACd,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,OAAO,4BAAC,CAAC,AACP,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,GAAG,CACZ,kBAAkB,CAAE,IAAI,CACxB,UAAU,CAAE,OAAO,CAAC,IAAI,AAC1B,CAAC,AAGD,mCAAO,MAAM,AAAC,CAAC,AACb,OAAO,CAAE,CAAC,AACZ,CAAC"
}