{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Image.svelte",
    "../../Waypoint.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Waypoint from \"svelte-waypoint\";\n\n  export let c = \"\"; // deprecated\n  export let alt = \"\";\n  export let width = null;\n  export let height = null;\n  export let src = \"\";\n  export let srcset = \"\";\n  export let srcsetWebp = \"\";\n  export let ratio = \"100%\";\n  export let blur = false;\n  export let sizes = \"(max-width: 1000px) 100vw, 1000px\";\n  export let threshold = 1.0;\n  export let lazy = true;\n  export let wrapperClass = \"\";\n  export let placeholderClass = \"\";\n\n  let className = \"\";\n  export { className as class };\n\n  let loaded = !lazy;\n\n  function load(img) {\n    img.onload = () => (loaded = true);\n  }\n</script>\n\n<style>\n  img {\n    object-position: center;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    will-change: opacity;\n  }\n\n  .blur {\n    filter: blur(10px);\n    transition: opacity 0.4s ease, filter 0.5s ease;\n  }\n\n  .placeholder {\n    opacity: 1;\n    transition: opacity 0.5s ease;\n    transition-delay: 0.7s;\n  }\n\n  .main {\n    opacity: 0;\n    transition: opacity 0.5s ease;\n    transition-delay: 0.7s;\n  }\n\n  .loaded .placeholder {\n    opacity: 0;\n  }\n\n  .loaded .main {\n    opacity: 1;\n  }\n</style>\n\n<Waypoint\n  class=\"{wrapperClass}\"\n  style=\"min-height: 100px; width: 100%;\"\n  once\n  {threshold}\n  disabled=\"{!lazy}\"\n>\n  <div class:loaded style=\"position: relative; width: 100%;\">\n    <div style=\"position: relative; overflow: hidden;\">\n      <div style=\"width:100%;padding-bottom:{ratio};\"></div>\n      <img class=\"placeholder {placeholderClass}\" {src} {alt} />\n      <picture>\n        <source type=\"image/webp\" srcset=\"{srcsetWebp}\" {sizes} />\n        <source {srcset} {sizes} />\n        <img\n          {src}\n          use:load\n          class=\"main {c} {className}\"\n          class:blur\n          {alt}\n          {width}\n          {height}\n        />\n      </picture>\n    </div>\n  </div>\n</Waypoint>\n",
    "<script>\n  import { createEventDispatcher, onDestroy } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let offset = 0;\n  export let throttle = 250;\n  export let c = '';\n  export let style = '';\n  export let once = true;\n  export let threshold = 1.0;\n  export let disabled = false;\n\n  let className = \"\";\n  export { className as class };\n\n  let visible = disabled;\n  let wasVisible = false;\n  let intersecting = false;\n  let removeHandlers = () => {};\n\n  function throttleFn(fn, time) {\n    let last, deferTimer;\n\n    return () => {\n      const now = +new Date;\n\n      if (last && now < last + time) {\n        // hold on to it\n        clearTimeout(deferTimer);\n        deferTimer = setTimeout(function () {\n          last = now;\n          fn();\n        }, time);\n      } else {\n        last = now;\n        fn();\n      }\n    };\n  }\n\n  function callEvents(wasVisible, observer, node) {\n    if (visible && !wasVisible) {\n      dispatch('enter');\n      return;\n    }\n\n    if (wasVisible && !intersecting) {\n      dispatch('leave');\n    }\n\n    if (once && wasVisible && !intersecting) {\n      removeHandlers();\n    }\n  }\n\n  function waypoint(node) {\n    if (!window || disabled) return;\n\n    if (window.IntersectionObserver && window.IntersectionObserverEntry) {\n      const observer = new IntersectionObserver(([ { isIntersecting } ]) => {\n        wasVisible = visible;\n\n        intersecting = isIntersecting;\n\n        if (wasVisible && once && !isIntersecting) {\n          callEvents(wasVisible, observer, node);\n          return;\n        }\n\n        visible = isIntersecting;\n\n        callEvents(wasVisible, observer, node);\n      }, {\n        rootMargin: offset + 'px',\n        threshold,\n      });\n\n      observer.observe(node);\n\n      removeHandlers = () => observer.unobserve(node);\n\n      return removeHandlers;\n    }\n\n    function checkIsVisible() {\n      // Kudos https://github.com/twobin/react-lazyload/blob/master/src/index.jsx#L93\n      if (!(node.offsetWidth || node.offsetHeight || node.getClientRects().length)) return;\n\n      let top;\n      let height;\n\n      try {\n        ({ top, height } = node.getBoundingClientRect());\n      } catch (e) {\n        ({ top, height } = defaultBoundingClientRect);\n      }\n\n      const windowInnerHeight = window.innerHeight\n        || document.documentElement.clientHeight;\n\n      wasVisible = visible;\n      intersecting = (top - offset <= windowInnerHeight) &&\n        (top + height + offset >= 0);\n\n      if (wasVisible && once && !isIntersecting) {\n        callEvents(wasVisible, observer, node);\n        return;\n      }\n\n      visible = intersecting;\n\n      callEvents(wasVisible);\n    }\n\n    checkIsVisible();\n\n    const throttled = throttleFn(checkIsVisible, throttle);\n\n    window.addEventListener('scroll', throttled);\n    window.addEventListener('resize', throttled);\n\n    removeHandlers = () => {\n      window.removeEventListener('scroll', throttled);\n      window.removeEventListener('resize', throttled);\n    }\n\n    return removeHandlers;\n  }\n</script>\n\n<style>\n.wrapper {\n  display: inline-block;\n}\n</style>\n\n<div class=\"wrapper {className} {c}\" {style} use:waypoint>\n  {#if visible}\n    <slot />\n  {/if}\n</div>\n"
  ],
  "names": [],
  "mappings": "AA6BE,GAAG,4BAAC,CAAC,AACH,eAAe,CAAE,MAAM,CACvB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,OAAO,AACtB,CAAC,AAED,KAAK,4BAAC,CAAC,AACL,MAAM,CAAE,KAAK,IAAI,CAAC,CAClB,UAAU,CAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,AACjD,CAAC,AAED,YAAY,4BAAC,CAAC,AACZ,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAC7B,gBAAgB,CAAE,IAAI,AACxB,CAAC,AAED,KAAK,4BAAC,CAAC,AACL,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAC7B,gBAAgB,CAAE,IAAI,AACxB,CAAC,AAED,qBAAO,CAAC,YAAY,cAAC,CAAC,AACpB,OAAO,CAAE,CAAC,AACZ,CAAC,AAED,qBAAO,CAAC,KAAK,cAAC,CAAC,AACb,OAAO,CAAE,CAAC,AACZ,CAAC;ACuEH,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,YAAY,AACvB,CAAC"
}